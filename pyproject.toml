[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pivotal-django-states"
dynamic = ["version"]
description = "State machine for django models"
readme = "README.md"
requires-python = ">=3.9"
authors = [
    { name = "Pivotal Energy Solutions", email = "steve@pivotal.energy" },
]
keywords = [
    "django",
    "state-machine",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Framework :: Django",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Utilities",
]
dependencies = [
    "Django>=4.2",
]

[project.optional-dependencies]
test = [
    "django-environ",
    "mysqlclient",
    "flake8",
    "coverage",
    "pre-commit",
    "black",
    "bandit"
]

[project.urls]
Issues = "https://github.com/pivotal-energy-solutions/django-states2/issues"
Download = "https://github.com/pivotal-energy-solutions/django-states2/archive/1.7.30.tar.gz"
Homepage = "https://github.com/pivotal-energy-solutions/django-states2"
"Original Source" = "https://github.com/vikingco/django-states2"
Thanks = "https://saythanks.io/to/rh0dium"

[tool.hatch.version]
path = "django_states/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/django_states",
]

[tool.hatch.build.targets.wheel]
packages = ['django_states']
include = [
    "/django_input_collection/templates/**/*",
]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | build
  | dist
)/
'''
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
/static/.py  # exclude a file named foo.py in the root of the project (in addition to the defaults)
'''

[tool.coverage.run]
branch = true
omit = [
    "*/demo_app/**",
    "*/migrations/*",
    "*/tests/**",
]

[tool.coverage.report]
fail_under = 70
ignore_errors = true
